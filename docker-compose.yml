
version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: dashboard-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: dashboard_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - dashboard-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Node.js
  backend:
    build: ./backend
    container_name: dashboard-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/dashboard_db?schema=public
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      PORT: 3001
      FRONTEND_URL: http://localhost:5173
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
      - ./backend/src:/app/src
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dashboard-network
    command: sh -c "npx prisma db push && npm run db:seed && node src/server.js"

  # Frontend React
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: dashboard-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3001
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - dashboard-network

  # Proxy reverso Nginx
  nginx:
    image: nginx:alpine
    container_name: dashboard-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - dashboard-network

volumes:
  postgres_data:
    driver: local

networks:
  dashboard-network:
    driver: bridge
