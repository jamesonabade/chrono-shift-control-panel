
version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=1024

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.prod
    expose:
      - "8080"
    environment:
      - NODE_ENV=production
      - VITE_APP_ENV=production
      - VITE_API_URL=${VITE_API_URL:-http://localhost/api}
      - VITE_BASE_PATH=${VITE_BASE_PATH:-/}
      - VITE_PUBLIC_URL=${VITE_PUBLIC_URL:-http://localhost}
    restart: unless-stopped
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    expose:
      - "3001"
    volumes:
      # Volumes persistentes para dados críticos
      - app_data:/app/data
      - app_scripts:/app/scripts
      - app_logs:/app/logs
      - app_uploads:/app/uploads
      # Socket do Docker para executar comandos
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATA_DIR=/app/data
      - SCRIPTS_DIR=/app/scripts
      - LOGS_DIR=/app/logs
      - UPLOADS_DIR=/app/uploads
      # Configurações de segurança
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - USER_PASSWORD=${USER_PASSWORD:-user123}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
    restart: unless-stopped
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    privileged: true
    user: root
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  # Volumes nomeados para persistência de dados
  app_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}
  
  app_scripts:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${SCRIPTS_PATH:-./scripts}
  
  app_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_PATH:-./logs}
  
  app_uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${UPLOADS_PATH:-./uploads}

networks:
  app-network:
    driver: bridge
    internal: false
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Configurações adicionais para produção
configs:
  nginx_config:
    file: ./nginx.conf

secrets:
  admin_password:
    external: true
  jwt_secret:
    external: true
