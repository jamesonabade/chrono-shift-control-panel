
# Build stage
FROM node:20-alpine AS build

WORKDIR /app

# Copiar package files para cache de layers
COPY package*.json ./
RUN npm ci

# Copiar source code
COPY . .

# Build da aplicação
RUN npm run build

# Production stage
FROM nginx:alpine

# Instalar curl para health checks e bash para scripts
RUN apk add --no-cache curl bash

# Copiar arquivos buildados
COPY --from=build /app/dist /usr/share/nginx/html

# Copiar configuração do nginx
COPY nginx-frontend.conf /etc/nginx/conf.d/default.conf

# Copiar script de entrypoint e dar permissões
COPY frontend-entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Converter quebras de linha para formato Unix
RUN dos2unix /usr/local/bin/entrypoint.sh 2>/dev/null || sed -i 's/\r$//' /usr/local/bin/entrypoint.sh

EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Usar entrypoint customizado
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
